import{_ as e}from"./index.d252ef4e.js";const t=async(t,s)=>(e((()=>import("./noiseWorker3d.61ad4b30.js")),[]).then((e=>{const i=e.default,r=(e,t)=>{const s=new i,r=e.getContext("2d");let a=0;if(r){const i=[];(async()=>{r.fillStyle="grey",r.fillRect(0,0,e.width,e.height),s.addEventListener("message",(e=>{(async e=>{Promise.resolve(i.push(await createImageBitmap(e)))})(e.data)})),s.postMessage({constructor:t}),Promise.resolve()})();const o=e=>{s.postMessage({update:{frame:e}}),a++};return async(t=0)=>{if(5>i.length&&(o(a),o(a),o(a)),i.length>1&&(r.drawImage(i.shift(),0,0),t)){r.fillStyle="rgba(256, 0, 0, .2)";{const t=e.width/5;for(let s=1;5>s;s++)r.fillRect(t*s-1,0,2,e.height)}{const t=e.height/5;for(let s=1;5>s;s++)r.fillRect(0,t*s-1,e.width,2)}}return Promise.resolve()}}return()=>{}},a=r(t,{canvasHeight:500,canvaswidth:500,seed:563729047,forceHigh:1,interpolation:"hermite"}),o=r(s,{canvasHeight:500,canvaswidth:500,seed:563759047,xSize:5,ySize:5,forceLow:1,interpolation:"hermite"});let n=0;const c=()=>{switch(n+=1,n%2){case 0:a();break;case 1:o(1)}window.requestAnimationFrame(c)};c()})),Promise.resolve());export{t as animate};
